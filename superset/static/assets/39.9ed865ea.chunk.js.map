{"version":3,"sources":["webpack:///./node_modules/@superset-ui/legacy-plugin-chart-country-map/esm/CountryMap.css?2363","webpack:///./node_modules/@superset-ui/legacy-plugin-chart-country-map/esm/CountryMap.js","webpack:///./node_modules/@superset-ui/legacy-plugin-chart-country-map/esm/ReactCountryMap.js","webpack:///./node_modules/@superset-ui/legacy-plugin-chart-country-map/node_modules/d3-array/src/extent.js","webpack:///./node_modules/@superset-ui/legacy-plugin-chart-country-map/esm/CountryMap.css"],"names":[],"mappings":"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","file":"39.9ed865ea.chunk.js","sourcesContent":["var content = require(\"!!../../../css-loader/index.js??ref--7-1!./CountryMap.css\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/* eslint-disable react/sort-prop-types */\nimport d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport { extent as d3Extent } from 'd3-array';\nimport { getNumberFormatter, getSequentialSchemeRegistry } from '@superset-ui/core';\nimport countries, { countryOptions } from './countries';\nimport './CountryMap.css';\nconst propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    country_id: PropTypes.string,\n    metric: PropTypes.number\n  })),\n  width: PropTypes.number,\n  height: PropTypes.number,\n  country: PropTypes.string,\n  linearColorScheme: PropTypes.string,\n  mapBaseUrl: PropTypes.string,\n  numberFormat: PropTypes.string\n};\nconst maps = {};\n\nfunction CountryMap(element, props) {\n  const {\n    data,\n    width,\n    height,\n    country,\n    linearColorScheme,\n    numberFormat\n  } = props;\n  const container = element;\n  const format = getNumberFormatter(numberFormat);\n  const colorScale = getSequentialSchemeRegistry().get(linearColorScheme).createLinearScale(d3Extent(data, v => v.metric));\n  const colorMap = {};\n  data.forEach(d => {\n    colorMap[d.country_id] = colorScale(d.metric);\n  });\n\n  const colorFn = d => colorMap[d.properties.ISO] || 'none';\n\n  const path = d3.geo.path();\n  const div = d3.select(container);\n  div.classed('superset-legacy-chart-country-map', true);\n  div.selectAll('*').remove();\n  container.style.height = `${height}px`;\n  container.style.width = `${width}px`;\n  const svg = div.append('svg:svg').attr('width', width).attr('height', height).attr('preserveAspectRatio', 'xMidYMid meet');\n  const backgroundRect = svg.append('rect').attr('class', 'background').attr('width', width).attr('height', height);\n  const g = svg.append('g');\n  const mapLayer = g.append('g').classed('map-layer', true);\n  const textLayer = g.append('g').classed('text-layer', true).attr('transform', `translate(${width / 2}, 45)`);\n  const bigText = textLayer.append('text').classed('big-text', true);\n  const resultText = textLayer.append('text').classed('result-text', true).attr('dy', '1em');\n  let centered;\n\n  const clicked = function clicked(d) {\n    const hasCenter = d && centered !== d;\n    let x;\n    let y;\n    let k;\n    const halfWidth = width / 2;\n    const halfHeight = height / 2;\n\n    if (hasCenter) {\n      const centroid = path.centroid(d);\n      [x, y] = centroid;\n      k = 4;\n      centered = d;\n    } else {\n      x = halfWidth;\n      y = halfHeight;\n      k = 1;\n      centered = null;\n    }\n\n    g.transition().duration(750).attr('transform', `translate(${halfWidth},${halfHeight})scale(${k})translate(${-x},${-y})`);\n    textLayer.style('opacity', 0).attr('transform', `translate(0,0)translate(${x},${hasCenter ? y - 5 : 45})`).transition().duration(750).style('opacity', 1);\n    bigText.transition().duration(750).style('font-size', hasCenter ? 6 : 16);\n    resultText.transition().duration(750).style('font-size', hasCenter ? 16 : 24);\n  };\n\n  backgroundRect.on('click', clicked);\n\n  const selectAndDisplayNameOfRegion = function selectAndDisplayNameOfRegion(feature) {\n    let name = '';\n\n    if (feature && feature.properties) {\n      if (feature.properties.ID_2) {\n        name = feature.properties.NAME_2;\n      } else {\n        name = feature.properties.NAME_1;\n      }\n    }\n\n    bigText.text(name);\n  };\n\n  const updateMetrics = function updateMetrics(region) {\n    if (region.length > 0) {\n      resultText.text(format(region[0].metric));\n    }\n  };\n\n  const mouseenter = function mouseenter(d) {\n    // Darken color\n    let c = colorFn(d);\n\n    if (c !== 'none') {\n      c = d3.rgb(c).darker().toString();\n    }\n\n    d3.select(this).style('fill', c);\n    selectAndDisplayNameOfRegion(d);\n    const result = data.filter(region => region.country_id === d.properties.ISO);\n    updateMetrics(result);\n  };\n\n  const mouseout = function mouseout() {\n    d3.select(this).style('fill', colorFn);\n    bigText.text('');\n    resultText.text('');\n  };\n\n  function drawMap(mapData) {\n    const {\n      features\n    } = mapData;\n    const center = d3.geo.centroid(mapData);\n    const scale = 100;\n    const projection = d3.geo.mercator().scale(scale).center(center).translate([width / 2, height / 2]);\n    path.projection(projection); // Compute scale that fits container.\n\n    const bounds = path.bounds(mapData);\n    const hscale = scale * width / (bounds[1][0] - bounds[0][0]);\n    const vscale = scale * height / (bounds[1][1] - bounds[0][1]);\n    const newScale = hscale < vscale ? hscale : vscale; // Compute bounds and offset using the updated scale.\n\n    projection.scale(newScale);\n    const newBounds = path.bounds(mapData);\n    projection.translate([width - (newBounds[0][0] + newBounds[1][0]) / 2, height - (newBounds[0][1] + newBounds[1][1]) / 2]); // Draw each province as a path\n\n    mapLayer.selectAll('path').data(features).enter().append('path').attr('d', path).attr('class', 'region').attr('vector-effect', 'non-scaling-stroke').style('fill', colorFn).on('mouseenter', mouseenter).on('mouseout', mouseout).on('click', clicked);\n  }\n\n  const map = maps[country];\n\n  if (map) {\n    drawMap(map);\n  } else {\n    const url = countries[country];\n    d3.json(url, (error, mapData) => {\n      if (error) {\n        var _countryOptions$find;\n\n        const countryName = ((_countryOptions$find = countryOptions.find(x => x[0] === country)) == null ? void 0 : _countryOptions$find[1]) || country;\n        d3.select(element).html(`<div class=\"alert alert-danger\">Could not load map data for ${countryName}</div>`);\n      } else {\n        maps[country] = mapData;\n        drawMap(mapData);\n      }\n    });\n  }\n}\n\nCountryMap.displayName = 'CountryMap';\nCountryMap.propTypes = propTypes;\nexport default CountryMap;","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { reactify } from '@superset-ui/core';\nimport Component from './CountryMap';\nexport default reactify(Component);","export default function(values, valueof) {\n  let min;\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  }\n  return [min, max];\n}\n","exports = module.exports = require(\"../../../css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \"/**\\n * Licensed to the Apache Software Foundation (ASF) under one\\n * or more contributor license agreements.  See the NOTICE file\\n * distributed with this work for additional information\\n * regarding copyright ownership.  The ASF licenses this file\\n * to you under the Apache License, Version 2.0 (the\\n * \\\"License\\\"); you may not use this file except in compliance\\n * with the License.  You may obtain a copy of the License at\\n *\\n *   http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing,\\n * software distributed under the License is distributed on an\\n * \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n * KIND, either express or implied.  See the License for the\\n * specific language governing permissions and limitations\\n * under the License.\\n */\\n\\n.superset-legacy-chart-country-map svg {\\n  background-color: #feffff;\\n}\\n\\n.superset-legacy-chart-country-map {\\n  position: relative;\\n}\\n\\n.superset-legacy-chart-country-map .background {\\n  fill: rgba(255, 255, 255, 0);\\n  pointer-events: all;\\n}\\n\\n.superset-legacy-chart-country-map .map-layer {\\n  fill: #fff;\\n  stroke: #aaa;\\n}\\n\\n.superset-legacy-chart-country-map .effect-layer {\\n  pointer-events: none;\\n}\\n\\n.superset-legacy-chart-country-map .text-layer {\\n  color: #333333;\\n  text-anchor: middle;\\n  pointer-events: none;\\n}\\n\\n.superset-legacy-chart-country-map text.result-text {\\n  font-weight: 300;\\n  font-size: 24px;\\n}\\n\\n.superset-legacy-chart-country-map text.big-text {\\n  font-weight: 700;\\n  font-size: 16px;\\n}\\n\\n.superset-legacy-chart-country-map path.region {\\n  cursor: pointer;\\n  stroke: #eee;\\n}\\n\", \"\", {\"version\":3,\"sources\":[\"G:/workspace/boke-pro/superset-all/superset/superset-frontend/node_modules/@superset-ui/legacy-plugin-chart-country-map/esm/CountryMap.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;;;;GAiBG;;AAEH;EACE,0BAA0B;CAC3B;;AAED;EACE,mBAAmB;CACpB;;AAED;EACE,6BAA6B;EAC7B,oBAAoB;CACrB;;AAED;EACE,WAAW;EACX,aAAa;CACd;;AAED;EACE,qBAAqB;CACtB;;AAED;EACE,eAAe;EACf,oBAAoB;EACpB,qBAAqB;CACtB;;AAED;EACE,iBAAiB;EACjB,gBAAgB;CACjB;;AAED;EACE,iBAAiB;EACjB,gBAAgB;CACjB;;AAED;EACE,gBAAgB;EAChB,aAAa;CACd\",\"file\":\"CountryMap.css\",\"sourcesContent\":[\"/**\\n * Licensed to the Apache Software Foundation (ASF) under one\\n * or more contributor license agreements.  See the NOTICE file\\n * distributed with this work for additional information\\n * regarding copyright ownership.  The ASF licenses this file\\n * to you under the Apache License, Version 2.0 (the\\n * \\\"License\\\"); you may not use this file except in compliance\\n * with the License.  You may obtain a copy of the License at\\n *\\n *   http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing,\\n * software distributed under the License is distributed on an\\n * \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n * KIND, either express or implied.  See the License for the\\n * specific language governing permissions and limitations\\n * under the License.\\n */\\n\\n.superset-legacy-chart-country-map svg {\\n  background-color: #feffff;\\n}\\n\\n.superset-legacy-chart-country-map {\\n  position: relative;\\n}\\n\\n.superset-legacy-chart-country-map .background {\\n  fill: rgba(255, 255, 255, 0);\\n  pointer-events: all;\\n}\\n\\n.superset-legacy-chart-country-map .map-layer {\\n  fill: #fff;\\n  stroke: #aaa;\\n}\\n\\n.superset-legacy-chart-country-map .effect-layer {\\n  pointer-events: none;\\n}\\n\\n.superset-legacy-chart-country-map .text-layer {\\n  color: #333333;\\n  text-anchor: middle;\\n  pointer-events: none;\\n}\\n\\n.superset-legacy-chart-country-map text.result-text {\\n  font-weight: 300;\\n  font-size: 24px;\\n}\\n\\n.superset-legacy-chart-country-map text.big-text {\\n  font-weight: 700;\\n  font-size: 16px;\\n}\\n\\n.superset-legacy-chart-country-map path.region {\\n  cursor: pointer;\\n  stroke: #eee;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n"],"sourceRoot":""}