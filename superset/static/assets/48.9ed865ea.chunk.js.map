{"version":3,"sources":["webpack:///./node_modules/@superset-ui/legacy-plugin-chart-chord/esm/Chord.js","webpack:///./node_modules/@superset-ui/legacy-plugin-chart-chord/esm/ReactChord.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACoB;AACe;AAC+C;AAClF;AACA,QAAQ,iDAAS;AACjB,YAAY,iDAAS,SAAS,iDAAS,SAAS,iDAAS;AACzD,WAAW,iDAAS,SAAS,iDAAS;AACtC,GAAG;AACH,SAAS,iDAAS;AAClB,UAAU,iDAAS;AACnB,eAAe,iDAAS;AACxB,gBAAgB,iDAAS;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,cAAc,yCAAE;AAChB;AACA;AACA;AACA;AACA,GAAG;AACH,YAAY,4EAAkB;AAC9B,kBAAkB,2EAAyB;AAC3C;AACA;AACA;AACA,cAAc,yCAAE;AAChB,iBAAiB,yCAAE,4CAA4C,yCAAE,wBAAwB,yCAAE;AAC3F,eAAe,yCAAE;AACjB,+LAA+L,UAAU,IAAI,WAAW;AACxN,8CAA8C;;AAE9C;AACA;AACA;AACA,GAAG,EAAE;;AAEL,0CAA0C,SAAS,IAAI,WAAW,GAAG;;AAErE,sEAAsE,EAAE,6DAA6D;;AAErI;AACA,qEAAqE,EAAE,4BAA4B;;AAEnG;AACA;AACA,GAAG,WAAW;;AAEd;AACA;AACA,GAAG,qEAAqE;;AAExE,qCAAqC,sBAAsB,KAAK,sBAAsB,IAAI,kBAAkB,IAAI,sBAAsB,KAAK,sBAAsB,IAAI,kBAAkB;AACvL;;AAEA;AACA;AACe,oEAAK,E;;;;;;;;;;;;ACrFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC0B;AAC2B;AAClB;AACH;AACsB;AACtD,uBAAuB,iEAAQ,CAAC,8CAAS;;AAEzC;AACA;AACA;AACA,CAAC,KAAK,0DAAa;AACnB;AACA,CAAC,EAAE,0DAAa;;AAEhB;AACA;AACA;AACA;AACA,aAAa,iDAAS;AACtB,cAAc,iDAAS,UAAU,iDAAS;AAC1C;AACe,+HAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,E","file":"48.9ed865ea.chunk.js","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/* eslint-disable no-param-reassign, react/sort-prop-types */\nimport d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport { getNumberFormatter, CategoricalColorNamespace } from '@superset-ui/core';\nconst propTypes = {\n  data: PropTypes.shape({\n    matrix: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)),\n    nodes: PropTypes.arrayOf(PropTypes.string)\n  }),\n  width: PropTypes.number,\n  height: PropTypes.number,\n  colorScheme: PropTypes.string,\n  numberFormat: PropTypes.string\n};\n\nfunction Chord(element, props) {\n  const {\n    data,\n    width,\n    height,\n    numberFormat,\n    colorScheme\n  } = props;\n  element.innerHTML = '';\n  const div = d3.select(element);\n  div.classed('superset-legacy-chart-chord', true);\n  const {\n    nodes,\n    matrix\n  } = data;\n  const f = getNumberFormatter(numberFormat);\n  const colorFn = CategoricalColorNamespace.getScale(colorScheme);\n  const outerRadius = Math.min(width, height) / 2 - 10;\n  const innerRadius = outerRadius - 24;\n  let chord;\n  const arc = d3.svg.arc().innerRadius(innerRadius).outerRadius(outerRadius);\n  const layout = d3.layout.chord().padding(0.04).sortSubgroups(d3.descending).sortChords(d3.descending);\n  const path = d3.svg.chord().radius(innerRadius);\n  const svg = div.append('svg').attr('width', width).attr('height', height).on('mouseout', () => chord.classed('fade', false)).append('g').attr('id', 'circle').attr('transform', `translate(${width / 2}, ${height / 2})`);\n  svg.append('circle').attr('r', outerRadius); // Compute the chord layout.\n\n  layout.matrix(matrix);\n  const group = svg.selectAll('.group').data(layout.groups).enter().append('g').attr('class', 'group').on('mouseover', (d, i) => {\n    chord.classed('fade', p => p.source.index !== i && p.target.index !== i);\n  }); // Add a mouseover title.\n\n  group.append('title').text((d, i) => `${nodes[i]}: ${f(d.value)}`); // Add the group arc.\n\n  const groupPath = group.append('path').attr('id', (d, i) => `group${i}`).attr('d', arc).style('fill', (d, i) => colorFn(nodes[i])); // Add a text label.\n\n  const groupText = group.append('text').attr('x', 6).attr('dy', 15);\n  groupText.append('textPath').attr('xlink:href', (d, i) => `#group${i}`).text((d, i) => nodes[i]); // Remove the labels that don't fit. :(\n\n  groupText.filter(function filter(d, i) {\n    return groupPath[0][i].getTotalLength() / 2 - 16 < this.getComputedTextLength();\n  }).remove(); // Add the chords.\n\n  chord = svg.selectAll('.chord').data(layout.chords).enter().append('path').attr('class', 'chord').on('mouseover', d => {\n    chord.classed('fade', p => p !== d);\n  }).style('fill', d => colorFn(nodes[d.source.index])).attr('d', path); // Add an elaborate mouseover title for each chord.\n\n  chord.append('title').text(d => `${nodes[d.source.index]} → ${nodes[d.target.index]}: ${f(d.source.value)}\\n${nodes[d.target.index]} → ${nodes[d.source.index]}: ${f(d.target.value)}`);\n}\n\nChord.displayName = 'Chord';\nChord.propTypes = propTypes;\nexport default Chord;","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { reactify, styled } from '@superset-ui/core';\nimport PropTypes from 'prop-types';\nimport Component from './Chord';\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst ReactComponent = reactify(Component);\n\nconst Chord = ({\n  className,\n  ...otherProps\n}) => ___EmotionJSX(\"div\", {\n  className: className\n}, ___EmotionJSX(ReactComponent, otherProps));\n\nChord.defaultProps = {\n  otherProps: {}\n};\nChord.propTypes = {\n  className: PropTypes.string.isRequired,\n  otherProps: PropTypes.objectOf(PropTypes.any)\n};\nexport default styled(Chord)`\n  .superset-legacy-chart-chord svg #circle circle {\n    fill: none;\n    pointer-events: all;\n  }\n  .superset-legacy-chart-chord svg .group path {\n    fill-opacity: 0.6;\n  }\n  .superset-legacy-chart-chord svg path.chord {\n    stroke: #000;\n    stroke-width: 0.25px;\n  }\n  .superset-legacy-chart-chord svg #circle:hover path.fade {\n    opacity: 0.2;\n  }\n`;"],"sourceRoot":""}