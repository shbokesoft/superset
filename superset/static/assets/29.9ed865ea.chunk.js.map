{"version":3,"sources":["webpack:///./node_modules/@superset-ui/legacy-plugin-chart-partition/esm/Partition.css?285c","webpack:///./node_modules/@superset-ui/legacy-plugin-chart-partition/esm/Partition.js","webpack:///./node_modules/@superset-ui/legacy-plugin-chart-partition/esm/ReactPartition.js","webpack:///./node_modules/@superset-ui/legacy-plugin-chart-partition/esm/Partition.css","webpack:///./node_modules/d3-hierarchy/src/hierarchy/ancestors.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/count.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/descendants.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/each.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/index.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/leaves.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/links.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/path.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/sort.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/sum.js"],"names":[],"mappings":"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AAExgI;;;;;;;;;;;;;ACPA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACND;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA,CAAC;;;;;;;;;;;;;ACXD;AAAe;AACf;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;;;;;;;;;;;;ACND;AAAe;AACf;AACA;AACA;AACA;AACA;AACA,oDAAoD,OAAO;AAC3D;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;;;;;;;;;;;;ACZD;AAAe;AACf;AACA;AACA;AACA,kDAAkD,OAAO;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACZD;AAAe;AACf;AACA;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoC;AACF;AACY;AACF;AACZ;AACE;AACA;AACU;AACI;AACV;AACF;;AAErB;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,iDAAU;AACnB,QAAQ,gDAAS;AACjB,aAAa,qDAAc;AAC3B,cAAc,sDAAe;AAC7B,OAAO,+CAAQ;AACf,QAAQ,gDAAS;AACjB,QAAQ,gDAAS;AACjB,aAAa,qDAAc;AAC3B,eAAe,uDAAgB;AAC/B,UAAU,kDAAW;AACrB,SAAS,kDAAU;AACnB;AACA;;;;;;;;;;;;;AC9EA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;;;;;;;;;;;;ACRD;AAAe;AACf;AACA;AACA,wBAAwB;AACxB,kBAAkB,kCAAkC;AACpD;AACA,GAAG;AACH;AACA,CAAC;;;;;;;;;;;;;ACRD;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7BA;AAAe;AACf;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;;;;;;;;;;;;ACND;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC","file":"29.9ed865ea.chunk.js","sourcesContent":["var content = require(\"!!../../../css-loader/index.js??ref--7-1!./Partition.css\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","/* eslint-disable react/sort-prop-types */\n\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/* eslint no-param-reassign: [2, {\"props\": false}] */\nimport d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport { hierarchy } from 'd3-hierarchy';\nimport { getNumberFormatter, getTimeFormatter, CategoricalColorNamespace } from '@superset-ui/core';\nimport './Partition.css'; // Compute dx, dy, x, y for each node and\n// return an array of nodes in breadth-first order\n\nfunction init(root) {\n  const flat = [];\n  const dy = 1 / (root.height + 1);\n  let prev = null;\n  root.each(n => {\n    n.y = dy * n.depth;\n    n.dy = dy;\n\n    if (n.parent) {\n      n.x = prev.depth === n.parent.depth ? 0 : prev.x + prev.dx;\n      n.dx = n.weight / n.parent.sum * n.parent.dx;\n    } else {\n      n.x = 0;\n      n.dx = 1;\n    }\n\n    prev = n;\n    flat.push(n);\n  });\n  return flat;\n} // Declare PropTypes for recursive data structures\n// https://github.com/facebook/react/issues/5676\n\n/* eslint-disable-next-line  no-undef */\n\n\nconst lazyFunction = f => () => f().apply(this, arguments);\n\nconst leafType = PropTypes.shape({\n  name: PropTypes.string,\n  val: PropTypes.number.isRequired\n});\nconst parentShape = {\n  name: PropTypes.string,\n  val: PropTypes.number.isRequired,\n  children: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.shape(lazyFunction(() => parentShape)), leafType]))\n};\nconst nodeType = PropTypes.oneOfType([PropTypes.shape(parentShape), leafType]);\nconst propTypes = {\n  data: PropTypes.arrayOf(nodeType),\n  // array of rootNode\n  width: PropTypes.number,\n  height: PropTypes.number,\n  colorScheme: PropTypes.string,\n  dateTimeFormat: PropTypes.string,\n  equalDateSize: PropTypes.bool,\n  levels: PropTypes.arrayOf(PropTypes.string),\n  metrics: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object])),\n  numberFormat: PropTypes.string,\n  partitionLimit: PropTypes.number,\n  partitionThreshold: PropTypes.number,\n  timeSeriesOption: PropTypes.string,\n  useLogScale: PropTypes.bool,\n  useRichTooltip: PropTypes.bool\n};\n\nfunction getAncestors(d) {\n  const ancestors = [d];\n  let node = d;\n\n  while (node.parent) {\n    ancestors.push(node.parent);\n    node = node.parent;\n  }\n\n  return ancestors;\n} // This vis is based on\n// http://mbostock.github.io/d3/talk/20111018/partition.html\n\n\nfunction Icicle(element, props) {\n  const {\n    width,\n    height,\n    data,\n    colorScheme,\n    dateTimeFormat,\n    equalDateSize,\n    levels,\n    useLogScale = false,\n    metrics = [],\n    numberFormat,\n    partitionLimit,\n    partitionThreshold,\n    useRichTooltip,\n    timeSeriesOption = 'not_time'\n  } = props;\n  const div = d3.select(element);\n  div.classed('superset-legacy-chart-partition', true); // Chart options\n\n  const chartType = timeSeriesOption;\n  const hasTime = ['adv_anal', 'time_series'].includes(chartType);\n  const format = getNumberFormatter(numberFormat);\n  const timeFormat = getTimeFormatter(dateTimeFormat);\n  const colorFn = CategoricalColorNamespace.getScale(colorScheme);\n  div.selectAll('*').remove();\n  const tooltip = div.append('div').classed('partition-tooltip', true);\n\n  function hasDateNode(n) {\n    return metrics.includes(n.data.name) && hasTime;\n  }\n\n  function getCategory(depth) {\n    if (!depth) {\n      return 'Metric';\n    }\n\n    if (hasTime && depth === 1) {\n      return 'Date';\n    }\n\n    return levels[depth - (hasTime ? 2 : 1)];\n  }\n\n  function drawVis(i, dat) {\n    const datum = dat[i];\n    const w = width;\n    const h = height / data.length;\n    const x = d3.scale.linear().range([0, w]);\n    const y = d3.scale.linear().range([0, h]);\n    const viz = div.append('div').attr('class', 'chart').style('width', `${w}px`).style('height', `${h}px`).append('svg:svg').attr('width', w).attr('height', h); // Add padding between multiple visualizations\n\n    if (i !== data.length - 1 && data.length > 1) {\n      viz.style('padding-bottom', '3px');\n    }\n\n    if (i !== 0 && data.length > 1) {\n      viz.style('padding-top', '3px');\n    }\n\n    const root = hierarchy(datum); // node.name is the metric/group name\n    // node.disp is the display value\n    // node.value determines sorting order\n    // node.weight determines partition height\n    // node.sum is the sum of children weights\n\n    root.eachAfter(n => {\n      n.disp = n.data.val;\n      n.value = n.disp < 0 ? -n.disp : n.disp;\n      n.weight = n.value;\n      n.name = n.data.name; // If the parent is a metric and we still have\n      // the time column, perform a date-time format\n\n      if (n.parent && hasDateNode(n.parent)) {\n        // Format timestamp values\n        n.weight = equalDateSize ? 1 : n.value;\n        n.value = n.name;\n        n.name = timeFormat(n.name);\n      }\n\n      if (useLogScale) n.weight = Math.log(n.weight + 1);\n      n.disp = n.disp && !Number.isNaN(n.disp) && Number.isFinite(n.disp) ? format(n.disp) : '';\n    }); // Perform sort by weight\n\n    root.sort((a, b) => {\n      const v = b.value - a.value;\n\n      if (v === 0) {\n        return b.name > a.name ? 1 : -1;\n      }\n\n      return v;\n    }); // Prune data based on partition limit and threshold\n    // both are applied at the same time\n\n    if (partitionThreshold && partitionThreshold >= 0) {\n      // Compute weight sums as we go\n      root.each(n => {\n        n.sum = n.children ? n.children.reduce((a, v) => a + v.weight, 0) || 1 : 1;\n\n        if (n.children) {\n          // Dates are not ordered by weight\n          if (hasDateNode(n)) {\n            if (equalDateSize) {\n              return;\n            }\n\n            const removeIndices = []; // Keep at least one child\n\n            for (let j = 1; j < n.children.length; j += 1) {\n              if (n.children[j].weight / n.sum < partitionThreshold) {\n                removeIndices.push(j);\n              }\n            }\n\n            for (let j = removeIndices.length - 1; j >= 0; j -= 1) {\n              n.children.splice(removeIndices[j], 1);\n            }\n          } else {\n            // Find first child that falls below the threshold\n            let j;\n\n            for (j = 1; j < n.children.length; j += 1) {\n              if (n.children[j].weight / n.sum < partitionThreshold) {\n                break;\n              }\n            }\n\n            n.children = n.children.slice(0, j);\n          }\n        }\n      });\n    }\n\n    if (partitionLimit && partitionLimit >= 0) {\n      root.each(n => {\n        if (n.children && n.children.length > partitionLimit) {\n          if (!hasDateNode(n)) {\n            n.children = n.children.slice(0, partitionLimit);\n          }\n        }\n      });\n    } // Compute final weight sums\n\n\n    root.eachAfter(n => {\n      n.sum = n.children ? n.children.reduce((a, v) => a + v.weight, 0) || 1 : 1;\n    });\n\n    function positionAndPopulate(tip, d) {\n      let t = '<table>';\n\n      if (useRichTooltip) {\n        const nodes = getAncestors(d);\n        nodes.reverse().forEach(n => {\n          const atNode = n.depth === d.depth;\n          t += '<tbody>';\n          t += '<tr>' + '<td>' + '<div ' + `style='border: 2px solid ${atNode ? 'black' : 'transparent'};` + `background-color: ${n.color};'` + '></div>' + '</td>' + `<td>${getCategory(n.depth)}</td>` + `<td>${n.name}</td>` + `<td>${n.disp}</td>` + '</tr>';\n        });\n      } else {\n        t += '<thead><tr><td colspan=\"3\">' + `<strong>${getCategory(d.depth)}</strong>` + '</td></tr></thead><tbody>';\n        t += '<tr>' + '<td>' + `<div style='border: thin solid grey; background-color: ${d.color};'` + '></div>' + '</td>' + `<td>${d.name}</td>` + `<td>${d.disp}</td>` + '</tr>';\n      }\n\n      t += '</tbody></table>';\n      const [tipX, tipY] = d3.mouse(element);\n      tip.html(t).style('left', `${tipX + 15}px`).style('top', `${tipY}px`);\n    }\n\n    const nodes = init(root);\n    let zoomX = w / root.dx;\n    let zoomY = h / 1; // Keep text centered in its division\n\n    function transform(d) {\n      return `translate(8,${d.dx * zoomY / 2})`;\n    }\n\n    const g = viz.selectAll('g').data(nodes).enter().append('svg:g').attr('transform', d => `translate(${x(d.y)},${y(d.x)})`).on('mouseover', d => {\n      tooltip.interrupt().transition().duration(100).style('opacity', 0.9);\n      positionAndPopulate(tooltip, d);\n    }).on('mousemove', d => {\n      positionAndPopulate(tooltip, d);\n    }).on('mouseout', () => {\n      tooltip.interrupt().transition().duration(250).style('opacity', 0);\n    }); // When clicking a subdivision, the vis will zoom in to it\n\n    function click(d) {\n      if (!d.children) {\n        if (d.parent) {\n          // Clicking on the rightmost level should zoom in\n          return click(d.parent);\n        }\n\n        return false;\n      }\n\n      zoomX = (d.y ? w - 40 : w) / (1 - d.y);\n      zoomY = h / d.dx;\n      x.domain([d.y, 1]).range([d.y ? 40 : 0, w]);\n      y.domain([d.x, d.x + d.dx]);\n      const t = g.transition().duration(d3.event.altKey ? 7500 : 750).attr('transform', nd => `translate(${x(nd.y)},${y(nd.x)})`);\n      t.select('rect').attr('width', d.dy * zoomX).attr('height', nd => nd.dx * zoomY);\n      t.select('text').attr('transform', transform).style('opacity', nd => nd.dx * zoomY > 12 ? 1 : 0);\n      d3.event.stopPropagation();\n      return true;\n    }\n\n    g.on('click', click);\n    g.append('svg:rect').attr('width', root.dy * zoomX).attr('height', d => d.dx * zoomY);\n    g.append('svg:text').attr('transform', transform).attr('dy', '0.35em').style('opacity', d => d.dx * zoomY > 12 ? 1 : 0).text(d => {\n      if (!d.disp) {\n        return d.name;\n      }\n\n      return `${d.name}: ${d.disp}`;\n    }); // Apply color scheme\n\n    g.selectAll('rect').style('fill', d => {\n      d.color = colorFn(d.name);\n      return d.color;\n    });\n  }\n\n  for (let i = 0; i < data.length; i += 1) {\n    drawVis(i, data);\n  }\n}\n\nIcicle.displayName = 'Icicle';\nIcicle.propTypes = propTypes;\nexport default Icicle;","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { reactify } from '@superset-ui/core';\nimport Component from './Partition';\nexport default reactify(Component);","exports = module.exports = require(\"../../../css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \"/**\\n * Licensed to the Apache Software Foundation (ASF) under one\\n * or more contributor license agreements.  See the NOTICE file\\n * distributed with this work for additional information\\n * regarding copyright ownership.  The ASF licenses this file\\n * to you under the Apache License, Version 2.0 (the\\n * \\\"License\\\"); you may not use this file except in compliance\\n * with the License.  You may obtain a copy of the License at\\n *\\n *   http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing,\\n * software distributed under the License is distributed on an\\n * \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n * KIND, either express or implied.  See the License for the\\n * specific language governing permissions and limitations\\n * under the License.\\n */\\n.superset-legacy-chart-partition {\\n  position: relative;\\n}\\n\\n.superset-legacy-chart-partition .chart {\\n  display: block;\\n  margin: auto;\\n  font-size: 11px;\\n}\\n\\n.superset-legacy-chart-partition rect {\\n  stroke: #eee;\\n  fill: #aaa;\\n  fill-opacity: 0.8;\\n  transition: fill-opacity 180ms linear;\\n  cursor: pointer;\\n}\\n\\n.superset-legacy-chart-partition rect:hover {\\n  fill-opacity: 1;\\n}\\n\\n.superset-legacy-chart-partition g text {\\n  font-weight: bold;\\n  fill: rgba(0, 0, 0, 0.8);\\n}\\n\\n.superset-legacy-chart-partition g:hover text {\\n  fill: rgba(0, 0, 0, 1);\\n}\\n\\n.superset-legacy-chart-partition .partition-tooltip {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  opacity: 0;\\n  padding: 5px;\\n  pointer-events: none;\\n  background-color: rgba(255, 255, 255, 0.75);\\n  border-radius: 5px;\\n}\\n\\n.partition-tooltip td {\\n  padding-left: 5px;\\n  font-size: 11px;\\n}\\n\", \"\", {\"version\":3,\"sources\":[\"G:/workspace/boke-pro/superset-all/superset/superset-frontend/node_modules/@superset-ui/legacy-plugin-chart-partition/esm/Partition.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;;;;GAiBG;AACH;EACE,mBAAmB;CACpB;;AAED;EACE,eAAe;EACf,aAAa;EACb,gBAAgB;CACjB;;AAED;EACE,aAAa;EACb,WAAW;EACX,kBAAkB;EAClB,sCAAsC;EACtC,gBAAgB;CACjB;;AAED;EACE,gBAAgB;CACjB;;AAED;EACE,kBAAkB;EAClB,yBAAyB;CAC1B;;AAED;EACE,uBAAuB;CACxB;;AAED;EACE,mBAAmB;EACnB,OAAO;EACP,QAAQ;EACR,WAAW;EACX,aAAa;EACb,qBAAqB;EACrB,4CAA4C;EAC5C,mBAAmB;CACpB;;AAED;EACE,kBAAkB;EAClB,gBAAgB;CACjB\",\"file\":\"Partition.css\",\"sourcesContent\":[\"/**\\n * Licensed to the Apache Software Foundation (ASF) under one\\n * or more contributor license agreements.  See the NOTICE file\\n * distributed with this work for additional information\\n * regarding copyright ownership.  The ASF licenses this file\\n * to you under the Apache License, Version 2.0 (the\\n * \\\"License\\\"); you may not use this file except in compliance\\n * with the License.  You may obtain a copy of the License at\\n *\\n *   http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing,\\n * software distributed under the License is distributed on an\\n * \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n * KIND, either express or implied.  See the License for the\\n * specific language governing permissions and limitations\\n * under the License.\\n */\\n.superset-legacy-chart-partition {\\n  position: relative;\\n}\\n\\n.superset-legacy-chart-partition .chart {\\n  display: block;\\n  margin: auto;\\n  font-size: 11px;\\n}\\n\\n.superset-legacy-chart-partition rect {\\n  stroke: #eee;\\n  fill: #aaa;\\n  fill-opacity: 0.8;\\n  transition: fill-opacity 180ms linear;\\n  cursor: pointer;\\n}\\n\\n.superset-legacy-chart-partition rect:hover {\\n  fill-opacity: 1;\\n}\\n\\n.superset-legacy-chart-partition g text {\\n  font-weight: bold;\\n  fill: rgba(0, 0, 0, 0.8);\\n}\\n\\n.superset-legacy-chart-partition g:hover text {\\n  fill: rgba(0, 0, 0, 1);\\n}\\n\\n.superset-legacy-chart-partition .partition-tooltip {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  opacity: 0;\\n  padding: 5px;\\n  pointer-events: none;\\n  background-color: rgba(255, 255, 255, 0.75);\\n  border-radius: 5px;\\n}\\n\\n.partition-tooltip td {\\n  padding-left: 5px;\\n  font-size: 11px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","export default function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n}\n","export default function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n}\n","import node_count from \"./count.js\";\nimport node_each from \"./each.js\";\nimport node_eachBefore from \"./eachBefore.js\";\nimport node_eachAfter from \"./eachAfter.js\";\nimport node_sum from \"./sum.js\";\nimport node_sort from \"./sort.js\";\nimport node_path from \"./path.js\";\nimport node_ancestors from \"./ancestors.js\";\nimport node_descendants from \"./descendants.js\";\nimport node_leaves from \"./leaves.js\";\nimport node_links from \"./links.js\";\n\nexport default function hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n"],"sourceRoot":""}