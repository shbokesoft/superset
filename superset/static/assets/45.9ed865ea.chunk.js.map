{"version":3,"sources":["webpack:///./node_modules/@superset-ui/legacy-plugin-chart-sankey/esm/ReactSankey.js","webpack:///./node_modules/@superset-ui/legacy-plugin-chart-sankey/esm/Sankey.js","webpack:///./node_modules/d3-sankey/index.js","webpack:///./node_modules/d3-sankey/src/sankey.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC0B;AAC2B;AAClB;AACL;AACwB;AACtD,oBAAoB,iEAAQ,CAAC,+CAAM;;AAEnC;AACA;AACA;AACA,CAAC,KAAK,0DAAa;AACnB;AACA,CAAC,EAAE,0DAAa;;AAEhB;AACA,aAAa,iDAAS;AACtB;AACe,+HAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,CAAC,cAAc;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,CAAC,cAAc;AACf,mBAAmB;AACnB;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC,E;;;;;;;;;;;;AC/ED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACoB;AACe;AACY;AACkD;AAChD;AACjD;AACA,QAAQ,iDAAS,SAAS,iDAAS;AACnC,YAAY,iDAAS;AACrB,YAAY,iDAAS;AACrB,WAAW,iDAAS;AACpB,GAAG;AACH,SAAS,iDAAS;AAClB,UAAU,iDAAS;AACnB,eAAe,iDAAS;AACxB;AACA,qBAAqB,4EAAkB,CAAC,yDAAa;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,cAAc,yCAAE;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2LAA2L,YAAY,GAAG,WAAW;AACrN,kBAAkB,2EAAyB;AAC3C,iBAAiB,wDAAQ;AACzB;AACA,iBAAiB;;AAEjB;AACA,kBAAkB;AAClB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH,UAAU,yCAAE;AACZ;;AAEA;AACA;;AAEA;AACA;AACA,gBAAgB,OAAO,6BAA6B,sBAAsB;AAC1E,KAAK;AACL;AACA,4BAA4B,yCAAE;AAC9B,4BAA4B,yCAAE;AAC9B,4PAA4P,sDAAsD;AAClT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,6BAA6B,SAAS,yCAAE,2CAA2C,qBAAqB,SAAS,yCAAE,6CAA6C;AAChK;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI,yCAAE,6CAA6C,IAAI,GAAG,0CAA0C,yCAAE,WAAW;AACjH;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gCAAgC,qEAAsB;AACtD;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;;AAEA,4IAA4I,IAAI,GAAG,IAAI,SAAS,yCAAE;AAClK;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG,uBAAuB,yCAAE;AAC5B;AACA;AACA;;AAEA;AACA;AACe,qEAAM,E;;;;;;;;;;;;ACrJrB;AAAA;AAAA;AAAA;AAA+C;;;;;;;;;;;;;ACA/C;AAAA;AAAA;AAAA;AAA6C;AACV;AACc;;AAElC;AACf,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe,8DAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,QAAQ,oDAAG;AACX,QAAQ,oDAAG;AACX;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uDAAuD,mBAAmB,EAAE;AAC5E;AACA,QAAQ;AACR;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,yBAAyB,0DAAI;AAC7B,0BAA0B,YAAY,EAAE;AACxC,kBAAkB,kDAAS;AAC3B;AACA,0BAA0B,iBAAiB,EAAE;;AAE7C;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,oDAAG;AAClB,8DAA8D,oDAAG;AACjE,OAAO;;AAEP;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,oDAAG,qCAAqC,oDAAG;AAC/D;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,oDAAG,qCAAqC,oDAAG;AAC/D;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,QAAQ;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC","file":"45.9ed865ea.chunk.js","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { reactify, styled } from '@superset-ui/core';\nimport PropTypes from 'prop-types';\nimport SanKey from './Sankey';\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\nconst ReactSanKey = reactify(SanKey);\n\nconst SankeyComponent = ({\n  className,\n  ...otherProps\n}) => ___EmotionJSX(\"div\", {\n  className: className\n}, ___EmotionJSX(ReactSanKey, otherProps));\n\nSankeyComponent.propTypes = {\n  className: PropTypes.string.isRequired\n};\nexport default styled(SankeyComponent)`\n  .superset-legacy-chart-sankey {\n    .node {\n      rect {\n        cursor: move;\n        fill-opacity: 0.9;\n        shape-rendering: crispEdges;\n      }\n      text {\n        pointer-events: none;\n        text-shadow: 0 1px 0 #fff;\n        font-size: ${({\n  fontSize\n}) => fontSize}em;\n      }\n    }\n    .link {\n      fill: none;\n      stroke: #000;\n      stroke-opacity: 0.2;\n      &:hover {\n        stroke-opacity: 0.5;\n      }\n    }\n    .opacity-0 {\n      opacity: 0;\n    }\n  }\n  .sankey-tooltip {\n    position: absolute;\n    width: auto;\n    background: #ddd;\n    padding: 10px;\n    font-size: ${({\n  fontSize\n}) => fontSize}em;\n    font-weight: ${({\n  theme\n}) => theme.typography.weights.light};\n    color: #000;\n    border: 1px solid #fff;\n    text-align: center;\n    pointer-events: none;\n  }\n`;","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/* eslint-disable no-param-reassign */\n\n/* eslint-disable react/sort-prop-types */\nimport d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport { sankey as d3Sankey } from 'd3-sankey';\nimport { getNumberFormatter, NumberFormats, CategoricalColorNamespace } from '@superset-ui/core';\nimport { getOverlappingElements } from './utils';\nconst propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    source: PropTypes.string,\n    target: PropTypes.string,\n    value: PropTypes.number\n  })),\n  width: PropTypes.number,\n  height: PropTypes.number,\n  colorScheme: PropTypes.string\n};\nconst formatNumber = getNumberFormatter(NumberFormats.FLOAT);\n\nfunction Sankey(element, props) {\n  const {\n    data,\n    width,\n    height,\n    colorScheme\n  } = props;\n  const div = d3.select(element);\n  div.classed(`superset-legacy-chart-sankey`, true);\n  const margin = {\n    top: 5,\n    right: 5,\n    bottom: 5,\n    left: 5\n  };\n  const innerWidth = width - margin.left - margin.right;\n  const innerHeight = height - margin.top - margin.bottom;\n  div.selectAll('*').remove();\n  const tooltip = div.append('div').attr('class', 'sankey-tooltip').style('opacity', 0);\n  const svg = div.append('svg').attr('width', innerWidth + margin.left + margin.right).attr('height', innerHeight + margin.top + margin.bottom).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n  const colorFn = CategoricalColorNamespace.getScale(colorScheme);\n  const sankey = d3Sankey().nodeWidth(15).nodePadding(10).size([innerWidth, innerHeight]);\n  const path = sankey.link();\n  let nodes = {}; // Compute the distinct nodes from the links.\n\n  const links = data.map(row => {\n    const link = { ...row\n    };\n    link.source = nodes[link.source] || (nodes[link.source] = {\n      name: link.source\n    });\n    link.target = nodes[link.target] || (nodes[link.target] = {\n      name: link.target\n    });\n    link.value = Number(link.value);\n    return link;\n  });\n  nodes = d3.values(nodes);\n  sankey.nodes(nodes).links(links).layout(32);\n\n  function getTooltipHtml(d) {\n    let html;\n\n    if (d.sourceLinks) {\n      // is node\n      html = `${d.name} Value: <span class='emph'>${formatNumber(d.value)}</span>`;\n    } else {\n      const val = formatNumber(d.value);\n      const sourcePercent = d3.round(d.value / d.source.value * 100, 1);\n      const targetPercent = d3.round(d.value / d.target.value * 100, 1);\n      html = [\"<div class=''>Path Value: <span class='emph'>\", val, '</span></div>', \"<div class='percents'>\", \"<span class='emph'>\", Number.isFinite(sourcePercent) ? sourcePercent : '100', '%</span> of ', d.source.name, '<br/>', `<span class='emph'>${Number.isFinite(targetPercent) ? targetPercent : '--'}%</span> of `, d.target.name, '</div>'].join('');\n    }\n\n    return html;\n  }\n\n  function onmouseover(d) {\n    tooltip.html(() => getTooltipHtml(d)).transition().duration(200);\n    const {\n      height: tooltipHeight,\n      width: tooltipWidth\n    } = tooltip.node().getBoundingClientRect();\n    tooltip.style('left', `${Math.min(d3.event.offsetX + 10, width - tooltipWidth)}px`).style('top', `${Math.min(d3.event.offsetY + 10, height - tooltipHeight)}px`).style('position', 'absolute').style('opacity', 0.95);\n  }\n\n  function onmouseout() {\n    tooltip.transition().duration(100).style('opacity', 0);\n  }\n\n  const link = svg.append('g').selectAll('.link').data(links).enter().append('path').attr('class', 'link').attr('d', path).style('stroke-width', d => Math.max(1, d.dy)).sort((a, b) => b.dy - a.dy).on('mouseover', onmouseover).on('mouseout', onmouseout);\n\n  function dragmove(d) {\n    d3.select(this).attr('transform', `translate(${d.x},${d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))})`);\n    sankey.relayout();\n    link.attr('d', path);\n  }\n\n  function checkVisibility() {\n    var _div$selectAll$;\n\n    const elements = (_div$selectAll$ = div.selectAll('.node')[0]) != null ? _div$selectAll$ : [];\n    const overlappingElements = getOverlappingElements(elements);\n    elements.forEach(el => {\n      const text = el.getElementsByTagName('text')[0];\n\n      if (text) {\n        if (overlappingElements.includes(el)) {\n          text.classList.add('opacity-0');\n        } else {\n          text.classList.remove('opacity-0');\n        }\n      }\n    });\n  }\n\n  const node = svg.append('g').selectAll('.node').data(nodes).enter().append('g').attr('class', 'node').attr('transform', d => `translate(${d.x},${d.y})`).call(d3.behavior.drag().origin(d => d).on('dragstart', function dragStart() {\n    this.parentNode.append(this);\n  }).on('drag', dragmove).on('dragend', checkVisibility));\n  const minRectHeight = 5;\n  node.append('rect').attr('height', d => d.dy > minRectHeight ? d.dy : minRectHeight).attr('width', sankey.nodeWidth()).style('fill', d => {\n    const name = d.name || 'N/A';\n    d.color = colorFn(name.replace(/ .*/, ''));\n    return d.color;\n  }).style('stroke', d => d3.rgb(d.color).darker(2)).on('mouseover', onmouseover).on('mouseout', onmouseout);\n  node.append('text').attr('x', -6).attr('y', d => d.dy / 2).attr('dy', '.35em').attr('text-anchor', 'end').attr('transform', null).text(d => d.name).attr('class', 'opacity-0').filter(d => d.x < innerWidth / 2).attr('x', 6 + sankey.nodeWidth()).attr('text-anchor', 'start');\n  checkVisibility();\n}\n\nSankey.displayName = 'Sankey';\nSankey.propTypes = propTypes;\nexport default Sankey;","export {default as sankey} from \"./src/sankey\";\n","import {ascending, min, sum} from \"d3-array\";\nimport {nest} from \"d3-collection\";\nimport {interpolateNumber} from \"d3-interpolate\";\n\nexport default function() {\n  var sankey = {},\n      nodeWidth = 24,\n      nodePadding = 8,\n      size = [1, 1],\n      nodes = [],\n      links = [];\n\n  sankey.nodeWidth = function(_) {\n    if (!arguments.length) return nodeWidth;\n    nodeWidth = +_;\n    return sankey;\n  };\n\n  sankey.nodePadding = function(_) {\n    if (!arguments.length) return nodePadding;\n    nodePadding = +_;\n    return sankey;\n  };\n\n  sankey.nodes = function(_) {\n    if (!arguments.length) return nodes;\n    nodes = _;\n    return sankey;\n  };\n\n  sankey.links = function(_) {\n    if (!arguments.length) return links;\n    links = _;\n    return sankey;\n  };\n\n  sankey.size = function(_) {\n    if (!arguments.length) return size;\n    size = _;\n    return sankey;\n  };\n\n  sankey.layout = function(iterations) {\n    computeNodeLinks();\n    computeNodeValues();\n    computeNodeBreadths();\n    computeNodeDepths(iterations);\n    computeLinkDepths();\n    return sankey;\n  };\n\n  sankey.relayout = function() {\n    computeLinkDepths();\n    return sankey;\n  };\n\n  sankey.link = function() {\n    var curvature = .5;\n\n    function link(d) {\n      var x0 = d.source.x + d.source.dx,\n          x1 = d.target.x,\n          xi = interpolateNumber(x0, x1),\n          x2 = xi(curvature),\n          x3 = xi(1 - curvature),\n          y0 = d.source.y + d.sy + d.dy / 2,\n          y1 = d.target.y + d.ty + d.dy / 2;\n      return \"M\" + x0 + \",\" + y0\n           + \"C\" + x2 + \",\" + y0\n           + \" \" + x3 + \",\" + y1\n           + \" \" + x1 + \",\" + y1;\n    }\n\n    link.curvature = function(_) {\n      if (!arguments.length) return curvature;\n      curvature = +_;\n      return link;\n    };\n\n    return link;\n  };\n\n  // Populate the sourceLinks and targetLinks for each node.\n  // Also, if the source and target are not objects, assume they are indices.\n  function computeNodeLinks() {\n    nodes.forEach(function(node) {\n      node.sourceLinks = [];\n      node.targetLinks = [];\n    });\n    links.forEach(function(link) {\n      var source = link.source,\n          target = link.target;\n      if (typeof source === \"number\") source = link.source = nodes[link.source];\n      if (typeof target === \"number\") target = link.target = nodes[link.target];\n      source.sourceLinks.push(link);\n      target.targetLinks.push(link);\n    });\n  }\n\n  // Compute the value (size) of each node by summing the associated links.\n  function computeNodeValues() {\n    nodes.forEach(function(node) {\n      node.value = Math.max(\n        sum(node.sourceLinks, value),\n        sum(node.targetLinks, value)\n      );\n    });\n  }\n\n  // Iteratively assign the breadth (x-position) for each node.\n  // Nodes are assigned the maximum breadth of incoming neighbors plus one;\n  // nodes with no incoming links are assigned breadth zero, while\n  // nodes with no outgoing links are assigned the maximum breadth.\n  function computeNodeBreadths() {\n    var remainingNodes = nodes,\n        nextNodes,\n        x = 0;\n\n    while (remainingNodes.length) {\n      nextNodes = [];\n      remainingNodes.forEach(function(node) {\n        node.x = x;\n        node.dx = nodeWidth;\n        node.sourceLinks.forEach(function(link) {\n          if (nextNodes.indexOf(link.target) < 0) {\n            nextNodes.push(link.target);\n          }\n        });\n      });\n      remainingNodes = nextNodes;\n      ++x;\n    }\n\n    //\n    moveSinksRight(x);\n    scaleNodeBreadths((size[0] - nodeWidth) / (x - 1));\n  }\n\n  // function moveSourcesRight() {\n  //   nodes.forEach(function(node) {\n  //     if (!node.targetLinks.length) {\n  //       node.x = min(node.sourceLinks, function(d) { return d.target.x; }) - 1;\n  //     }\n  //   });\n  // }\n\n  function moveSinksRight(x) {\n    nodes.forEach(function(node) {\n      if (!node.sourceLinks.length) {\n        node.x = x - 1;\n      }\n    });\n  }\n\n  function scaleNodeBreadths(kx) {\n    nodes.forEach(function(node) {\n      node.x *= kx;\n    });\n  }\n\n  function computeNodeDepths(iterations) {\n    var nodesByBreadth = nest()\n        .key(function(d) { return d.x; })\n        .sortKeys(ascending)\n        .entries(nodes)\n        .map(function(d) { return d.values; });\n\n    //\n    initializeNodeDepth();\n    resolveCollisions();\n    for (var alpha = 1; iterations > 0; --iterations) {\n      relaxRightToLeft(alpha *= .99);\n      resolveCollisions();\n      relaxLeftToRight(alpha);\n      resolveCollisions();\n    }\n\n    function initializeNodeDepth() {\n      var ky = min(nodesByBreadth, function(nodes) {\n        return (size[1] - (nodes.length - 1) * nodePadding) / sum(nodes, value);\n      });\n\n      nodesByBreadth.forEach(function(nodes) {\n        nodes.forEach(function(node, i) {\n          node.y = i;\n          node.dy = node.value * ky;\n        });\n      });\n\n      links.forEach(function(link) {\n        link.dy = link.value * ky;\n      });\n    }\n\n    function relaxLeftToRight(alpha) {\n      nodesByBreadth.forEach(function(nodes) {\n        nodes.forEach(function(node) {\n          if (node.targetLinks.length) {\n            var y = sum(node.targetLinks, weightedSource) / sum(node.targetLinks, value);\n            node.y += (y - center(node)) * alpha;\n          }\n        });\n      });\n\n      function weightedSource(link) {\n        return center(link.source) * link.value;\n      }\n    }\n\n    function relaxRightToLeft(alpha) {\n      nodesByBreadth.slice().reverse().forEach(function(nodes) {\n        nodes.forEach(function(node) {\n          if (node.sourceLinks.length) {\n            var y = sum(node.sourceLinks, weightedTarget) / sum(node.sourceLinks, value);\n            node.y += (y - center(node)) * alpha;\n          }\n        });\n      });\n\n      function weightedTarget(link) {\n        return center(link.target) * link.value;\n      }\n    }\n\n    function resolveCollisions() {\n      nodesByBreadth.forEach(function(nodes) {\n        var node,\n            dy,\n            y0 = 0,\n            n = nodes.length,\n            i;\n\n        // Push any overlapping nodes down.\n        nodes.sort(ascendingDepth);\n        for (i = 0; i < n; ++i) {\n          node = nodes[i];\n          dy = y0 - node.y;\n          if (dy > 0) node.y += dy;\n          y0 = node.y + node.dy + nodePadding;\n        }\n\n        // If the bottommost node goes outside the bounds, push it back up.\n        dy = y0 - nodePadding - size[1];\n        if (dy > 0) {\n          y0 = node.y -= dy;\n\n          // Push any overlapping nodes back up.\n          for (i = n - 2; i >= 0; --i) {\n            node = nodes[i];\n            dy = node.y + node.dy + nodePadding - y0;\n            if (dy > 0) node.y -= dy;\n            y0 = node.y;\n          }\n        }\n      });\n    }\n\n    function ascendingDepth(a, b) {\n      return a.y - b.y;\n    }\n  }\n\n  function computeLinkDepths() {\n    nodes.forEach(function(node) {\n      node.sourceLinks.sort(ascendingTargetDepth);\n      node.targetLinks.sort(ascendingSourceDepth);\n    });\n    nodes.forEach(function(node) {\n      var sy = 0, ty = 0;\n      node.sourceLinks.forEach(function(link) {\n        link.sy = sy;\n        sy += link.dy;\n      });\n      node.targetLinks.forEach(function(link) {\n        link.ty = ty;\n        ty += link.dy;\n      });\n    });\n\n    function ascendingSourceDepth(a, b) {\n      return a.source.y - b.source.y;\n    }\n\n    function ascendingTargetDepth(a, b) {\n      return a.target.y - b.target.y;\n    }\n  }\n\n  function center(node) {\n    return node.y + node.dy / 2;\n  }\n\n  function value(link) {\n    return link.value;\n  }\n\n  return sankey;\n}\n"],"sourceRoot":""}